#!/bin/bash
#
# A custom session script for `systemd --user` and a WM.

SESSION_APPLICATION=awesome


# Run the `systemd --user` session.
systemd_suffix="@${DISPLAY}"
systemd_envfile="$XDG_RUNTIME_DIR/$DISPLAY-environment"
systemd_target="graphic${systemd_suffix}.target"
systemd_exit_target="exit-session${systemd_suffix}.target"

echo "Starting \`systemd --user\` unit $systemd_target"

printenv > "$systemd_envfile"
systemctl --user isolate "$systemd_target"


#
# XXX: this is now achieved via an ExecStop= setting in the X server's unit file.
# Need to check which approach is better and more correct.
#

#function stop_systemd_session() {
#	# Stop the `systemd --user` session.
#	echo "Stopping \`systemd --user\` session"
#
#	systemctl --user start "$systemd_exit_target"
#	rm -f "$systemd_envfile"
#	echo "Session wrapper done"
#}
#
#trap stop_systemd_session EXIT TERM HUP


# Run the session itself.
echo "Starting session application '${SESSION_APPLICATION[@]}'"

/usr/lib/kde4/libexec/polkit-kde-authentication-agent-1
eval "export $(/usr/bin/gnome-keyring-daemon --start)"
nm-applet &
xss-lock -l -- "$HOME/bin/lock.sh" &

exec "${SESSION_APPLICATION[@]}"
