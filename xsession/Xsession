#!/bin/bash
#
# LightDM-based wrapper to run around X sessions.

exec > >(systemd-cat -t xsession$DISPLAY)

echo "Starting X session (session '$XDG_SESSION_ID' seat '$XDG_SEAT')"


# Load profile
for file in "/etc/profile" "$HOME/.bash_profile" "/etc/xprofile" "$HOME/.xprofile"; do
	if [[ -f "$file" ]]; then
		echo "Loading profile script: $file"
		. "$file"
	fi
done


# Load resources
for file in "/etc/X11/Xresources" "$HOME/.Xresources"; do
    if [[ -f "$file" ]]; then
        echo "Loading X resource: $file"
        xrdb -merge "$file"
    fi
done


# Load keymaps
for file in "/etc/X11/Xkbmap" "$HOME/.Xkbmap"; do
    if [[ -f "$file" ]]; then
        echo "Loading XKB keymap: $file"
		xargs setxkbmap < "$file"
    fi
done


# Load xmodmap
for file in "/etc/X11/Xmodmap" "$HOME/.Xmodmap"; do
	if [[ -f "$file" ]]; then
	   echo "Loading X modmap: $file"
	   xmodmap "$file"
	fi
done


# Run all system xinitrc shell scripts.
xinitdir="/etc/X11/xinit/xinitrc.d"
for script in "$xinitdir"/* "$HOME/.xinitrc"; do
	if [[ -f "$script" && -r "$script" ]]; then
		echo "Loading xinit script: $script"
		. "$script"
	fi
done


# Read environment from `systemd --user`.
echo "Reading \`systemd --user\` environment"

while IFS="=" read name value; do
	eval "test \$$name || export $name='$value'"
done < <(systemctl --user show-environment)


# Run the `systemd --user` session.
systemd_suffix="@${DISPLAY}"
systemd_envfile="$XDG_RUNTIME_DIR/$DISPLAY-environment"
systemd_target="graphic${systemd_suffix}.target"
systemd_exit_target="exit-session${systemd_suffix}.target"

echo "Starting \`systemd --user\` unit $systemd_target"

printenv > "$systemd_envfile"
systemctl --user isolate "$systemd_target"


function stop_systemd_session() {
	# Stop the `systemd --user` session.
	echo "Stopping \`systemd --user\` session"

	systemctl --user start "$systemd_exit_target"
	rm -f "$systemd_envfile"
	echo "Session wrapper done"
}

trap stop_systemd_session EXIT TERM HUP


# Run the session itself.
echo "Starting session '$session'"

case "$session" in
	failsafe)
		xterm -geometry 80x24-0-0
		;;

	custom)
		"$HOME/.xsession"
		;;
	
	*)
		"$@"
		;;
esac

echo "Session application exited"
